plugins {
	id "com.github.johnrengelman.shadow" version "5.0.0"
	id "com.matthewprenger.cursegradle"
}

def ENV = System.getenv()

configurations {
	shadow
}

architectury {
	platformSetupLoomIde()
}

loom {
	useFabricMixin = true
}

dependencies {
	minecraft("com.mojang:minecraft:${rootProject.minecraft_version}")
	mappings(minecraft.officialMojangMappings())
	forge("net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}")

	modCompile("me.shedaniel:architectury:${rootProject.architectury_version}:forge")

	compileOnly(project(path: ":common")) {
		transitive = false
	}
	runtimeOnly(project(path: ":common", configuration: "transformDevelopmentForge")) {
		transitive = false
	}
	shadow(project(path: ":common", configuration: "transformProductionForge")) {
		transitive = false
	}

	modCompile("curse.maven:kubejs-238086:${rootProject.forge_kjs_file}")
	modCompile("curse.maven:rhino-416294:${rootProject.rhino_file}")

	modCompile("curse.maven:jei-238222:${rootProject.forge_jei_file}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

shadowJar {
	exclude "fabric.mod.json"

	configurations = [project.configurations.shadow]
	classifier "shadow"
}

remapJar {
	dependsOn(shadowJar)
	input.set(shadowJar.archivePath)
	classifier "forge"
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

if (ENV.CURSEFORGE_KEY) {
	curseforge {
		apiKey = ENV.CURSEFORGE_KEY
		project {
			id = project.curseforge_id_forge
			releaseType = "release"
			addGameVersion "Forge"
			addGameVersion "1.16.4"
			addGameVersion "1.16.5"
			mainArtifact(remapJar.archivePath)
			relations {
				requiredDependency 'kubejs'
				requiredDependency 'architectury-forge'
			}
			changelog = getGitChangelog
			changelogType = 'markdown'
		}
	}
}

publishing {
	publications {
		mavenForge(MavenPublication) {
			artifactId = rootProject.archivesBaseName + "-forge"
			artifact(remapJar.archivePath) {
				builtBy build
				classifier null
			}
		}
	}

	repositories {
		if (ENV.LOCAL_MAVEN) {
			maven {
				// upload to local maven repo
				url = "file://${ENV.LOCAL_MAVEN}"
			}
		}
	}
}

rootProject.tasks.getByName("curseforgePublish").dependsOn tasks.getByName("curseforge")